/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.MouseInfo;
import java.awt.Point;

/**
 *
 * @author Lee Song
 */
public class PlayGui extends javax.swing.JFrame {

    String defaultIPText = "192.168.22.85";//"IP eingeben...";
    int defaultPort = 7;
    GameServer server;
    GameClient client;
    
    /**
     * Creates new form PlayGui
     */
    public PlayGui() {
        initComponents();
        this.TextFieldIP.setText(defaultIPText);
        this.TextFieldIP.setForeground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TextFieldIP = new javax.swing.JTextField();
        ButtonConnect = new javax.swing.JButton();
        ButtonStartServer = new javax.swing.JButton();
        ButtonStopServer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Retard Ski Sim 2016");
        setResizable(false);

        TextFieldIP.setText("TextFieldIP");
        TextFieldIP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextFieldIPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextFieldIPFocusLost(evt);
            }
        });
        TextFieldIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldIPActionPerformed(evt);
            }
        });
        TextFieldIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextFieldIPKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextFieldIPKeyTyped(evt);
            }
        });

        ButtonConnect.setText("Verbinden");
        ButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonConnectActionPerformed(evt);
            }
        });

        ButtonStartServer.setText("Server starten");
        ButtonStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStartServerActionPerformed(evt);
            }
        });

        ButtonStopServer.setText("Server beenden");
        ButtonStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStopServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextFieldIP, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonConnect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonStartServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonStopServer)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonConnect)
                    .addComponent(ButtonStartServer)
                    .addComponent(ButtonStopServer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldIPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldIPFocusGained
        if(TextFieldIP.getText().equals(defaultIPText)){
            //TextFieldIP.setText("");
            TextFieldIP.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_TextFieldIPFocusGained

    private void TextFieldIPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldIPFocusLost
        if(TextFieldIP.getText().equals("")){
            TextFieldIP.setForeground(Color.GRAY);
            TextFieldIP.setText(defaultIPText);
        }
    }//GEN-LAST:event_TextFieldIPFocusLost

    private void TextFieldIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldIPActionPerformed
        
    }//GEN-LAST:event_TextFieldIPActionPerformed

    private void ButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonConnectActionPerformed
        client = new GameClient(TextFieldIP.getText(), defaultPort);
    }//GEN-LAST:event_ButtonConnectActionPerformed

    private void ButtonStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStartServerActionPerformed
        server = new GameServer(defaultPort);
        server.loopThread.start();
    }//GEN-LAST:event_ButtonStartServerActionPerformed

    private void ButtonStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStopServerActionPerformed
        server.exit();
        server = null;
    }//GEN-LAST:event_ButtonStopServerActionPerformed

    private void TextFieldIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldIPKeyTyped
        
    }//GEN-LAST:event_TextFieldIPKeyTyped

    private void TextFieldIPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldIPKeyPressed
        if(TextFieldIP.getText().equals("")){
            ButtonConnect.setEnabled(false);
        } else 
            ButtonConnect.setEnabled(true);
    }//GEN-LAST:event_TextFieldIPKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonConnect;
    private javax.swing.JButton ButtonStartServer;
    private javax.swing.JButton ButtonStopServer;
    private javax.swing.JTextField TextFieldIP;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
